<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBottle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>oThing</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inits
grab_init(0);
sound_init(snd_bottle4, snd_bottle5);

direction = random_range(-53, 12);
speed = random_range(0, 18);

alarm[0] = random_range(room_speed, room_speed*1.5);    //break timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BREAK

// 65% chance of breaking eahc time it is dropped
if (random(1) &lt; 0.65)
{
    // if breaking, create shards, play sound
    audio_play_sound(snd_glassbreak, 2, false);
    instance_create(x, y, oShard);
    var shard = instance_create(x, y, oShard);
    with (shard)
    {
        image_index = 1;    // second shard has different sprite
    }
    
    with (oScene2)
    {
        var temp_splats = splats;   //save current state of splats
        splats = splats &lt;&lt; 1;       //shift splats one to left
        if (splats == 0)            //if no splats yet, make a splat
        {
            splats = 1;
        }
        splats = splats | temp_splats;  //add current splats state to old state
        
        // clear splat coords and replace with bottle's coords
        splat_coord[break_num] = ( (splat_coord[break_num] &amp; $ffffff00) |   (other.x) );
        splat_coord[break_num] = ( (splat_coord[break_num] &amp; $ffff00ff) | ( (other.y) &lt;&lt; 8) );
        splat_coord[break_num] = ( (splat_coord[break_num] &amp; $ff00ffff) | ( (choose($09, $fa, $1b, $5c, $9a)) &lt;&lt; 16 ) );
        
        //if 8 splats, cycle back to first
        break_num++;
        if (break_num &gt; 7)
        {
            break_num = 0;
        }
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controller
thing_grab(angle_init, 0);
image_angle -= hspeed*random_range(10, 20); // add some extra angle to this item

// when picked up, reset break timer
if (picked_up == true)
{
    alarm[0] = random_range(room_speed, room_speed*1.5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
