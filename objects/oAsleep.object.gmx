<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inits
window_set_cursor(cr_none);
draw_set_font(font);

// for garbage bag graphical effects
width = 1;
height = 1;
angle = 1;

//on 2nd level, make a single dream raccoon
if(global.level_count == 1)
{
    var rac = instance_create(1, 1, oRaccoon);
    with (rac)
    {
        image_alpha = 0.5;
    }
}
else if(global.level_count == 4)
{
    alarm[0] = room_speed*3;
    message_make(room_width/2, 10, "SAVING SCORE...", room_speed*2);
    draw_set_font(font_big);
    global.score_total_run = global.score_total_run + global.score_total;
    global.games_count++;
    ini_open("score.ini");
    ini_write_real("progress", "score_total_run", global.score_total_run);
    ini_write_real("progress", "games_count", global.games_count);
    ini_close();
}

win_string = "you got about " + string( ((global.score_total div 5) * 5) + choose(-5, 0, 5) ) + " garbages i think";
if (global.plus_mode == true)
{
    win_string =  "you got like " + string( ((global.score_total_run div 5) * 5 ) + choose(-5, 0, 5) ) + " garbages in " + string(global.games_count) + " games " + choose("perhaps", "maybe", "i guess");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RESTART BUTTON
instance_create(30,30,oButtonend);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SCENE CONTROLLER

// calculate stuff for garbage bag graphics
width = 1 + (sin(angle));
height = 1 + (cos(angle));
angle += 0.1;
image_angle = angle*16;

// make many RACCOON if this is the 3rd level
if (global.level_count == 2)
{
    if (!instance_exists(oRaccoon))
    {
        var rac = instance_create(choose(1, room_width - 1), irandom(room_height), oRaccoon);
        with (rac)
        {
            image_alpha = 0.5;
            direction_init = (point_direction(x, y, room_width/2, room_height/2));
            if (global.plus_mode == true)
            {
                if ( (global.games_count mod 2) == 0)
                {
                    sprite_index = sprHam;
                }
                if ( (global.games_count mod 3) == 0)
                {
                    sprite_index = choose(sprCoin, sprShard);
                }
            }
            if (sprite_index == sprRaccoon1)
            {
                image_blend = c_red;
            }
        }
    }
    //destroy RACCOON if they go too far
    else if ((oRaccoon.x &lt; -1) or (oRaccoon.x &gt; room_width + 1))
    {
        with (oRaccoon)
        {
            instance_destroy();
        }
    }
}

// go to next scene after clicking
if (mouse_check_button_released(mb_left))
{
    // unless it is the end of the game
    if (global.level_count != 4)
    {
        with(all)
        {
            instance_destroy();
        }
        room_goto(rScene1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW TEXT + BORDER

//border (fuck the)
draw_rectangle_colour(0, 0, room_width - 1, room_height - 1, c_blue, c_blue, c_blue, c_blue, true);

//draw ILLUSORY GARBAGE if last level
if (global.level_count == 3)
{
    draw_sprite_ext(sprGarbageghost, 0, room_width/2, room_height/2, width, height, image_angle, c_red, 0.5 ); 
}
// show score, message at end of game
else if (global.level_count == 4)
{
    draw_text_ext_colour(room_width/2, room_height/2, win_string, 10, room_width, c_red, c_red, c_red, c_red, 1);
    //draw_text_colour    (room_width/2, room_height/2, "you got about " + string((global.score_total div 10) * 10) + " garbages i think", c_red, c_red, c_red, c_red, 1);
    //draw_text_colour(room_width/2, room_height/2 + 10, "IT WAS ALL A DREAM", c_red, c_red, c_red, c_red, 1);   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
