<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inits
image_speed = 0;
sprite_index = choose(sprHand, sprHand1);   //choose which coloured hand randomly
sprite_switch = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls

move_towards_point(mouse_x, mouse_y, point_distance(mouse_x, mouse_y, x, y)/2); //move with mouse

// grab things with LMB
if (mouse_check_button_pressed(mb_left))
{
    image_index = sprite_switch;    //switch to closed hand
    if (position_meeting(mouse_x, mouse_y, oThing))
    {
        with (instance_position(mouse_x, mouse_y, oThing) )
        {
            picked_up = true;
            if (object_index == oBag)
            {
                audio_play_sound(choose(snd_bagcrumple, snd_bagcrumple2), 1, false);
                image_index = 1;
            }
        }
    }
}
//drop when release
else if (mouse_check_button_released(mb_left))
{
    image_index = !sprite_switch;   //switch back to open hand
    with (oThing)
    {
        if (picked_up == true)
        {
            picked_up = false;
            if (sound_amount == 0)
            {
                if (sound[0] != -1)
                {
                    audio_play_sound(sound[0], 1, false);
                }
            }
            else
            {
                audio_play_sound(sound[irandom(sound_amount)], 1, false);
            }
        }
    }
}

//keep hand in bounds!
if (x &lt; 1)
{
    x = 1;
}
else if (x &gt; (room_width - 1))
{
    x = (room_width - 1);
}
if (y &lt; 1)
{
    y = 1;
}
else if (y &gt; (room_height - 1))
{
    y = (room_height - 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
